// @flow
declare type FN = (...args: any[]) => any

declare export function getIn <O: {[mixed]: mixed}, K>(obj: O, key: K): $ElementType<O, K>
declare export function setIn <O: {}, K, V>(obj: O, key: K, value: V): {...O, [K]: V}

declare export function composeReturn <R>(returnVal: R, fn: (mixed[]) => any): (mixed[]) => R

declare export function onCatch <Args: [], R>(fn: (...Args) => R, callback: (e: Error, ...Args) => void): (...Args) => R
declare export function throwIf (condition: boolean, exception: Error|() => Error): boolean
